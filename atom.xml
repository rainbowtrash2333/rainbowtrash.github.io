<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rainbowtrash</title>
  <icon>https://www.gravatar.com/avatar/9073863e77b148773a635350da96e55b</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.rainbowtrash.top/"/>
  <updated>2018-03-10T09:52:25.255Z</updated>
  <id>https://www.rainbowtrash.top/</id>
  
  <author>
    <name>rainbowtrash</name>
    <email>rainbowtrash2333@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>18/3/10 碎碎念</title>
    <link href="https://www.rainbowtrash.top/2018/03/10/18-3-10-%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <id>https://www.rainbowtrash.top/2018/03/10/18-3-10-碎碎念/</id>
    <published>2018-03-10T09:50:32.000Z</published>
    <updated>2018-03-10T09:52:25.255Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>开学一周了, 该立flag了</h2><p></p><p><ol><br>    <li>好好学高数</li><br>    <li>英语得搞好</li><br>    <li>Java</li><br>    <li>小马也要放映了,一定得看直播</li><br>    <li>暂时想到这儿</li><br></ol></p><p></p><h2>要做一个”2018昭通一中激励”视频</h2><p></p><p></p><p>趁这个机会抱抱dalao的腿; 学习一些Pr Ae 之类的</p><p></p><p></p><h2>对了, 云大樱花开了, 美</h2><p></p><p></p><p>随便盗张图来23333</p><br><img src="https://img-top.rainbowtrash.top/www.rainbowtrash.top/2018/3/%E4%BA%91%E5%A4%A7_%E6%A8%B1%E8%8A%B1.gif"><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;开学一周了, 该立flag了&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;ol&gt;&lt;br&gt;    &lt;li&gt;好好学高数&lt;/li&gt;&lt;br&gt;    &lt;li&gt;英语得搞好&lt;/li&gt;&lt;br&gt;    &lt;li&gt;Java&lt;/li&gt;&lt;br&gt;    &lt;li&gt;小马也要放映了,一定得看直播&lt;/li
      
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://www.rainbowtrash.top/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>工具收藏</title>
    <link href="https://www.rainbowtrash.top/2018/03/04/%E5%B7%A5%E5%85%B7%E6%94%B6%E8%97%8F/"/>
    <id>https://www.rainbowtrash.top/2018/03/04/工具收藏/</id>
    <published>2018-03-04T13:55:14.000Z</published>
    <updated>2018-03-04T14:05:17.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1>LINUX</h1><p></p><p></p><h2> 带宽测试  speedtest-cli</h2><p></p><p><a href="https://github.com/sivel/speedtest-cli" target="_blank" rel="noopener">GitHub: sivel/speedtest-cli</a></p><br><pre><br># 安装<br>pip install speedtest-cli<br><br># 测试<br>speedtest-cli<br><br># 直接测试<br>wget <a href="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py" target="_blank" rel="noopener">https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py</a>; python speedtest.py<br></pre><br><h2>QQ空间自动养宠物 playPony</h2><br><p><a href="https://github.com/juzeon/playPony" target="_blank" rel="noopener">GitHub:juzeon/playPony</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1&gt;LINUX&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt; 带宽测试  speedtest-cli&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/sivel/speedtest-cli&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
      <category term="搜藏" scheme="https://www.rainbowtrash.top/tags/%E6%90%9C%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>动态二维数组</title>
    <link href="https://www.rainbowtrash.top/2018/02/22/%E5%8A%A8%E6%80%81%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    <id>https://www.rainbowtrash.top/2018/02/22/动态二维数组/</id>
    <published>2018-02-22T06:56:46.000Z</published>
    <updated>2018-02-22T06:57:57.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1>动态二维数组</h1><p></p><p></p><h2>code</h2><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> high, width, i, j;</span><br><span class="line">scanf_s(<span class="string">"%d %d"</span>, &amp;high, &amp;width);</span><br><span class="line"></span><br><span class="line"><span class="comment">//先弄个二位指针</span></span><br><span class="line"><span class="comment">//给其分配high个指针空间</span></span><br><span class="line"><span class="comment">//相当于存储了二维数组的每一列第一个的地址</span></span><br><span class="line"><span class="keyword">int</span> * * canvas = (<span class="keyword">int</span> * * )<span class="built_in">malloc</span>(high * <span class="keyword">sizeof</span>(<span class="keyword">int</span> *));</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; width; i++) &#123;</span><br><span class="line">    <span class="comment">//每一列再分配width个int型的空间</span></span><br><span class="line">    <span class="comment">//就OK了</span></span><br><span class="line">canvas[i] = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(width * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width; ++j) &#123;</span><br><span class="line">canvas[i][j] = i + j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width; ++j) &#123;</span><br><span class="line">printf_s(<span class="string">"%d\t"</span>, canvas[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">printf_s(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"PAUSE"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1&gt;动态二维数组&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;code&lt;/h2&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>实时钟表</title>
    <link href="https://www.rainbowtrash.top/2018/02/20/%E5%AE%9E%E6%97%B6%E9%92%9F%E8%A1%A8/"/>
    <id>https://www.rainbowtrash.top/2018/02/20/实时钟表/</id>
    <published>2018-02-20T08:19:39.000Z</published>
    <updated>2018-02-20T08:27:46.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1>实时钟表</h1><p></p><p></p><h2>源码</h2><p></p><p><a href="https://github.com/rainbowtrash2333/my-stupid-game/blob/master/easyX/%E5%AE%9E%E6%97%B6%E9%92%9F%E8%A1%A8.cpp" target="_blank" rel="noopener">Github</a></p><br><h2>笔记</h2><br><h3>NOTE 1: easyX 函数介绍</h3><br><h4>initgrap()</h4><br><pre>HWND initgraph(<br>    int width,<br>    int height,<br>    int flag = NULL<br>);<br></pre><br><p>width  绘图环境的宽度。</p><br><p>height 绘图环境的高度。</p><br><p>flag 绘图环境的样式，默认为 NULL。可为以下值:<br><ul><br><li>NOCLOSE 禁用绘图环境的关闭按钮。 </li><br><li>NOMINIMIZE 禁用绘图环境的最小化按钮。</li><br><li>SHOWCONSOLE 保留原控制台窗口。</li><br></ul><br></p><p></p><p>eg.</p><p></p><p></p><p>以下局部代码创建一个尺寸为 640x480 的绘图环境：</p><p></p><pre>initgraph(640, 480);</pre><p>以下局部代码创建一个尺寸为 640x480的绘图环境，同时显示控制台窗口：</p><pre>initgraph(640, 480, SHOWCONSOLE);</pre> <p>以下局部代码创建一个尺寸为640x480的绘图环境，同时显示控制台窗口，并禁用关闭按钮：</p><pre>initgraph(640, 480, SHOWCONSOLE | NOCLOSE);</pre><p></p><h4>closegraph()</h4><p></p><p></p><p>关闭图形环境. </p><p></p><pre>void closegraph();</pre><p></p><h4>圆,线,点,矩形的绘画</h4> <p></p><p></p><h5>setlinestytle()</h5><p></p><p></p><p>这个函数用于设置当前画线样式.</p><p></p><p></p><h5>setcolor()</h5><p></p><p></p><p>这个函数用于设置当前绘图前景色。</p><p></p><p></p><h5>circle()</h5><p></p><p></p><p>这个函数用于画圆。</p><p></p><pre>void circle(    int x,    int y,    int radius);</pre><h5></h5><p>这个函数用于画填充矩形（无边框）。</p><p><pre>void bar(    int left,    int top,    int right,    int bottom);</pre></p><p>参数：<ul><li>left  矩形左部 x 坐标。</li><li>top 矩形上部 y 坐标。</li><li>right  矩形右部 x 坐标。</li><li>bottom  矩形下部 y 坐标。</li></ul></p><h5>putpixel()</h5><p>这个函数用于画点。</p><pre>void putpixel(int x, int y, COLORREF color);</pre><h5>line()</h5><p>这个函数用于画直线。还可以用 linerel 和 lineto 画直线。</p><pre>void line(    int x1,    int y1,    int x2,    int y2);</pre><h4>写字</h4><p>这个函数用于在指定位置输出字符串。</p><p><pre>void outtextxy(    int x,    int y,    LPCTSTR str);</pre><pre>void outtextxy(    int x,    int y,    TCHAR c);</pre>参数：<ul><li>x   字符串输出时头字母的 x 轴的坐标值 </li><li>y   字符串输出时头字母的 y 轴的坐标值</li> <li>str 待输出的字符串的指针</li> <li>c   待输出的字符 </li></ul>eg.<pre>TCHAR s[sizeof("我的时钟")];swprintf_s(s, _T("%s"), L"我的时钟");outtextxy((int)center_x - 25, center_y + width / 6, s);</pre></p><p></p><h3>调用系统时间</h3><p></p><pre>SYSTEMTIME ti;second = ti.wSecond;minute = ti.wMinute;hour = ti.wHour;</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h1&gt;实时钟表&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h2&gt;源码&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rainbowtrash2333/my-stupid-game/blob/master/easyX/%E5%A
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>fighting game 2.0</title>
    <link href="https://www.rainbowtrash.top/2018/02/07/fighting-game-2-0/"/>
    <id>https://www.rainbowtrash.top/2018/02/07/fighting-game-2-0/</id>
    <published>2018-02-07T06:15:58.000Z</published>
    <updated>2018-02-07T06:23:28.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>源码</h2><br><a href="https://github.com/rainbowtrash2333/my-stupid-game/blob/master/fighting_plain_2.0.cpp" target="_blank" rel="noopener">GitHub</a><p></p><p></p><h2>笔记</h2><p></p><p></p><h3>note 1</h3><p></p><p><pre><br>   for (i = high - 1; i &gt; -1; –i) {<br>        for (j = width - 1; j &gt; -1; –j) {<br>        …………..<br>            else if (canvas[i][j] == 3) {<br>                new_canvas[i + 1][j] = 3;<br>                    new_canvas[i][j] = 0;<br>                        canvas[i][j] = 0;<br>            }<br>    …………<br></pre></p><p>为什么不与上面</p><br><pre><br>    for (i = 0; i &lt; high; ++i) {<br>        for (j = 0; j &lt; width; ++j) {<br>        …………..<br></pre><br><p>合并</p><br><p>因为</p><br><pre> new_canvas[i + 1][j] = 3;</pre><br>i由0到high, 修改了i+1, 党循环到i=i+1时, 再次修改下一个i+1, 就BUG了.<br><p></p><br><h3>note 2</h3><br><p><br><pre><br> 1|   else if ((canvas[i][j] == 2) &amp;&amp; (canvas[i - 1][j] == 3)) {<br> 2|      new_canvas[i - 1][j] = 4;<br> 3|      new_canvas[i][j] = 0;<br> 4|       canvas[i - 1][j] = 0;<br> 5|       canvas[i][j] == 0;<br> 6|       score++;<br> 7|   }<br></pre><br></p><p>3行new_canvas[i][j] = 0;目的是防止没有赋值给new_canvas[i][j], 造成BUG<br></p><br><pre>note 3</pre><br><p>击中敌机与减生命逻辑不对, 因为敌机,子弹会相向移动, 因此敌机与子弹相距为2, 敌机与飞机同理</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;源码&lt;/h2&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/rainbowtrash2333/my-stupid-game/blob/master/fighting_plain_2.0.cpp&quot; target=&quot;_blank&quot; rel=&quot;n
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>消方块游戏</title>
    <link href="https://www.rainbowtrash.top/2018/02/04/%E6%B6%88%E6%96%B9%E5%9D%97%E6%B8%B8%E6%88%8F/"/>
    <id>https://www.rainbowtrash.top/2018/02/04/消方块游戏/</id>
    <published>2018-02-04T11:03:07.000Z</published>
    <updated>2018-02-04T11:04:15.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2> 源码 </h2><p></p><p><br><a href="https://github.com/rainbowtrash2333/my-stupid-game/blob/master/eliminate_subjects.cpp" target="_blank" rel="noopener">github地址</a><br></p><p></p><h2> 笔记 </h2><p></p><p>第97行</p><br><pre>97 | if (BallSpeedControl(3))</pre><br><p>原来自控制112~114行的球移动速度, 而球会在同意位置停留3个单位时长, 而99~109行会继续判断并修改 ball.vector_x 和 ball.vector_y 的值, 出现BUG<br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt; 源码 &lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/rainbowtrash2333/my-stupid-game/blob/master/eliminate_subjects.cpp&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="game" scheme="https://www.rainbowtrash.top/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>2018/2/4 碎碎念</title>
    <link href="https://www.rainbowtrash.top/2018/02/04/2018-2-4-%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    <id>https://www.rainbowtrash.top/2018/02/04/2018-2-4-碎碎念/</id>
    <published>2018-02-04T04:20:40.000Z</published>
    <updated>2018-02-04T11:21:38.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>机动车驾驶证到手了</h2><p></p><p>经过暑假的酷闷与寒假的刺骨, 驾照终于到手了. 于2018/2/2拿到驾照</p><br><h2>2018/2/2小马大电影在中国上映</h2><br><p>, 然而我这儿的影院并不上映, 看盗版吧. </p><br><h2>驾照学完了, 有时间撸代码了</h2><br><p>然而冷死了, 室内零下, 瑟瑟发抖. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;机动车驾驶证到手了&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;经过暑假的酷闷与寒假的刺骨, 驾照终于到手了. 于2018/2/2拿到驾照&lt;/p&gt;&lt;br&gt;&lt;h2&gt;2018/2/2小马大电影在中国上映&lt;/h2&gt;&lt;br&gt;&lt;p&gt;, 然而我这儿的影院并不上映, 看盗版吧. &lt;/p
      
    
    </summary>
    
    
      <category term="碎碎念" scheme="https://www.rainbowtrash.top/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>生命游戏</title>
    <link href="https://www.rainbowtrash.top/2018/02/01/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    <id>https://www.rainbowtrash.top/2018/02/01/生命游戏/</id>
    <published>2018-02-01T07:06:46.000Z</published>
    <updated>2018-02-01T07:08:37.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/***</span></span><br><span class="line"><span class="comment">                   *生命游戏*</span></span><br><span class="line"><span class="comment">*运用数组实现对每一个cell的生命属性储存(1 or 0)*</span></span><br><span class="line"><span class="comment">***/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> high 25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> width 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">int</span> cells[high+<span class="number">2</span>][width+<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数据初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">//范围外的值都为0</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">-1</span>; i &lt; high+<span class="number">1</span>; ++i)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">-1</span>; j &lt; width + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">cells[i][j] = rand() % <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> ((i == <span class="number">-1</span>) || (i == high) || (j == <span class="number">-1</span>) || (j == width)) cells[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> (cells[i][j] == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">without_input_update</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> new_cells[high][width];</span><br><span class="line"><span class="keyword">int</span> neighbor;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width; ++j) &#123;</span><br><span class="line"><span class="comment">//cell周围的值相加得到其周围的cell数</span></span><br><span class="line">neighbor = cells[i - <span class="number">1</span>][j - <span class="number">1</span>] + cells[i - <span class="number">1</span>][j] + cells[i - <span class="number">1</span>][j + <span class="number">1</span>] + cells[i][j - <span class="number">1</span>] + cells[i][j + <span class="number">1</span>] + cells[i + <span class="number">1</span>][j - <span class="number">1</span>] + cells[i + <span class="number">1</span>][j] + cells[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (neighbor == <span class="number">3</span>) new_cells[i][j] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (neighbor == <span class="number">2</span>) new_cells[i][j] = cells[i][j];</span><br><span class="line"><span class="keyword">else</span> new_cells[i][j] = <span class="number">0</span>;</span><br><span class="line">cells[i][j] = new_cells[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">with_input_update</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于隐藏光标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CONSOLE_CURSOR_INFO cursor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;  <span class="comment">// 第二个值为0表示隐藏光标</span></span><br><span class="line">SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;cursor_info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">startup();</span><br><span class="line"><span class="keyword">while</span> (game_over) &#123;</span><br><span class="line">HideCursor();</span><br><span class="line">with_input_update();</span><br><span class="line">without_input_update();</span><br><span class="line">show();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/***&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
    
      <category term="game" scheme="https://www.rainbowtrash.top/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>Flappy Bird</title>
    <link href="https://www.rainbowtrash.top/2018/01/15/Flappy-Bird/"/>
    <id>https://www.rainbowtrash.top/2018/01/15/Flappy-Bird/</id>
    <published>2018-01-15T12:28:44.000Z</published>
    <updated>2018-01-15T12:47:42.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">***flappy bird 游戏, 然而我忘记整么玩的了,就乱搞吧***</span></span><br><span class="line"><span class="comment">***           swad控制鸟, 记分没弄,就酱          ***</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">int</span> high, width;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bird</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> heath;</span><br><span class="line"><span class="keyword">int</span> gravity;</span><br><span class="line">&#125;bird;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">barrier</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> gap_high;</span><br><span class="line"><span class="keyword">int</span> gap_x;</span><br><span class="line">&#125;barr[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">starup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">high = <span class="number">15</span>;</span><br><span class="line">width = <span class="number">40</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line">bird.x = high / <span class="number">2</span>;</span><br><span class="line">bird.y = width / <span class="number">4</span>;</span><br><span class="line">bird.heath = <span class="number">3</span>;</span><br><span class="line">bird.gravity = <span class="number">6</span>;</span><br><span class="line">barr[<span class="number">0</span>].y = width/<span class="number">2</span>;</span><br><span class="line">barr[<span class="number">1</span>].y = width/<span class="number">4</span> *<span class="number">3</span>;</span><br><span class="line">barr[<span class="number">2</span>].y = width;</span><br><span class="line">barr[<span class="number">3</span>].y = width/<span class="number">4</span> *<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机生成障碍缺口参数</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt;<span class="number">4</span>; ++i) &#123;</span><br><span class="line">barr[i].gap_high = <span class="number">2</span> + rand() % <span class="number">2</span>;</span><br><span class="line">barr[i].gap_x = rand() % (high - barr[i].gap_high);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图形显示</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high + <span class="number">1</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width + <span class="number">1</span>; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> ((i == bird.x) &amp;&amp; (j == bird.y)) <span class="built_in">printf</span>(<span class="string">"@"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((!((i &gt;= barr[<span class="number">0</span>].gap_x) &amp;&amp; (i &lt;= barr[<span class="number">0</span>].gap_x + barr[<span class="number">0</span>].gap_high)) &amp;&amp; (j == barr[<span class="number">0</span>].y)) || (!((i &gt;= barr[<span class="number">1</span>].gap_x) &amp;&amp; (i &lt;= barr[<span class="number">1</span>].gap_x + barr[<span class="number">1</span>].gap_high)) &amp;&amp; (j == barr[<span class="number">1</span>].y)) || (!((i &gt;= barr[<span class="number">2</span>].gap_x) &amp;&amp; (i &lt;= barr[<span class="number">2</span>].gap_x + barr[<span class="number">2</span>].gap_high)) &amp;&amp; (j == barr[<span class="number">2</span>].y))|| (!((i &gt;= barr[<span class="number">3</span>].gap_x) &amp;&amp; (i &lt;= barr[<span class="number">3</span>].gap_x + barr[<span class="number">3</span>].gap_high)) &amp;&amp; (j == barr[<span class="number">3</span>].y)))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"共%d分\t还有%d条生命\n"</span>, score, bird.heath);</span><br><span class="line">Sleep(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家控制部分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_without_input</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> input;</span><br><span class="line"><span class="keyword">if</span> (_kbhit()) &#123;</span><br><span class="line">input = _getch();</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'a'</span>) bird.y --;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'d'</span>) bird.y ++;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'w'</span>) bird.x --;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'s'</span>) bird.x ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//速度控制</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">speed_gravity</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">++i;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n) &#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">speed</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">++i;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n) &#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家不能控制部分</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_with_input</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鸟下坠</span></span><br><span class="line"><span class="keyword">if</span> (speed_gravity(bird.gravity)) bird.x++;</span><br><span class="line"></span><br><span class="line"><span class="comment">//障碍左移</span></span><br><span class="line"><span class="keyword">if</span> (speed(<span class="number">7</span>)) &#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) barr[i].y--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//循环生成障碍</span></span><br><span class="line"><span class="keyword">if</span> (barr[<span class="number">0</span>].y == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">barrier</span> <span class="title">temp</span>;</span></span><br><span class="line">barr[<span class="number">0</span>].y = width/<span class="number">4</span> *<span class="number">5</span>;</span><br><span class="line">barr[<span class="number">0</span>].gap_high = <span class="number">2</span> + rand() % <span class="number">2</span>;</span><br><span class="line">barr[<span class="number">0</span>].gap_x = rand() % (high - barr[<span class="number">0</span>].gap_high);</span><br><span class="line">temp = barr[<span class="number">0</span>];</span><br><span class="line">barr[<span class="number">0</span>] = barr[<span class="number">1</span>];</span><br><span class="line">barr[<span class="number">1</span>] = barr[<span class="number">2</span>];</span><br><span class="line">barr[<span class="number">2</span>] = barr[<span class="number">3</span>];</span><br><span class="line">barr[<span class="number">3</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//鸟与障碍碰撞</span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (bird.y == barr[i].y) &#123;</span><br><span class="line"><span class="keyword">if</span> (!((bird.x &gt;= barr[i].gap_x) &amp;&amp; (bird.x &lt;= barr[i].gap_x + barr[i].gap_high))) &#123;</span><br><span class="line">--bird.heath;</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line">bird.x = barr[i].gap_x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏结束判定</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">game_over</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (bird.heath == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于隐藏光标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CONSOLE_CURSOR_INFO cursor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;  <span class="comment">// 第二个值为0表示隐藏光标</span></span><br><span class="line">SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;cursor_info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">starup();</span><br><span class="line">HideCursor(); <span class="comment">// 隐藏光标</span></span><br><span class="line"><span class="keyword">while</span> (game_over()) &#123;</span><br><span class="line">update_with_input();</span><br><span class="line">update_without_input();</span><br><span class="line">show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"游戏结束!\n"</span>);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="game" scheme="https://www.rainbowtrash.top/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>链表实验</title>
    <link href="https://www.rainbowtrash.top/2018/01/15/%E9%93%BE%E8%A1%A8%E5%AE%9E%E9%AA%8C/"/>
    <id>https://www.rainbowtrash.top/2018/01/15/链表实验/</id>
    <published>2018-01-15T03:04:48.000Z</published>
    <updated>2018-01-15T03:06:39.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">****链表练习*****</span></span><br><span class="line"><span class="comment">*由用户决定链表长度,做到动态内存分配*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//student's struction 名字 学号 三门分数 平均分 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student_score</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">25</span>];</span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">float</span> score[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">float</span> avg_score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student_score</span> *<span class="title">next</span>;</span>    <span class="comment">//注1: 虽然使用typedef声明过, 但struct不可以省 </span></span><br><span class="line">&#125;std_sc;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受用户输入的数据</span></span><br><span class="line">scan_std(std_sc *pt)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"enter name:"</span>);</span><br><span class="line">    gets(pt-&gt;name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"enter ID:"</span>);</span><br><span class="line">    gets(pt-&gt;ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"enter the first score:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;pt-&gt;score[<span class="number">0</span>]);    <span class="comment">//注2: "&amp;",pt指向score[0]为一个具体的值, 不是地址, 下同</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"enter the second score:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;pt-&gt;score[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"enter the third score:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;pt-&gt;score[<span class="number">2</span>]);</span><br><span class="line">    getchar();    <span class="comment">//注3: 接受回车,防止奇怪BUG, scanf getchar 需要这步,而gets 不必 </span></span><br><span class="line">    pt-&gt;avg_score=(pt-&gt;score[<span class="number">0</span>]+pt-&gt;score[<span class="number">1</span>]+pt-&gt;score[<span class="number">2</span>])/<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">****输出结果****</span></span><br><span class="line"><span class="comment">*遇到pt地址指向NULL时,结束*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_std</span><span class="params">(std_sc *pt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(pt!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"name: %-25s  sudent ID: %-15s score 1: %3.2f \</span></span><br><span class="line"><span class="string">score 2: %3.2f score 3: %3.2f average score: %3.2f\n"</span>,pt-&gt;name,\</span><br><span class="line">pt-&gt;ID,pt-&gt;score[<span class="number">0</span>],pt-&gt;score[<span class="number">1</span>],pt-&gt;score[<span class="number">2</span>],pt-&gt;avg_score);</span><br><span class="line">        pt=pt-&gt;next;    <span class="comment">//注4: 重点(敲黑板)   </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    std_sc *first,<span class="built_in">std</span>,*last;    <span class="comment">//注5: 不能是*std, sizeof(*)==8(我的编译器是这个结果,不过我记得老师说是4?),不能存储数据</span></span><br><span class="line">    scan_std(&amp;<span class="built_in">std</span>);</span><br><span class="line">    first = &amp;<span class="built_in">std</span>;    <span class="comment">//注6: 开头要有啊,不然找不到入口了</span></span><br><span class="line">    <span class="keyword">char</span> flag;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"centinue?(y/n)"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;flag); </span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(flag;flag==<span class="string">'y'</span>;)&#123;</span><br><span class="line">        last=(std_sc *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(std_sc));    <span class="comment">//注6: 详细见下</span></span><br><span class="line">        scan_std(last);</span><br><span class="line">        first-&gt;next=last;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"centinue?(y/n)"</span>); </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;flag);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125; </span><br><span class="line">    last-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">     print_std(first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*注6: last在之前要定义过, malloc(memory allocation)格式为void *malloc(size_t size); (void *可以指向任何类型的数据)</span></span><br><span class="line"><span class="comment">******换人话:malloc(sizeof(std_sc))是分配一个std_sc大小的内存空间,可以写为malloc(sizeof(8*std_sc)), malloc(100)等;</span></span><br><span class="line"><span class="comment">******(std_sc *)指定分配的内存的数据类型为std_sc****************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="C实验" scheme="https://www.rainbowtrash.top/tags/C%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>结构体,共同体,位域及typedef</title>
    <link href="https://www.rainbowtrash.top/2018/01/15/%E7%BB%93%E6%9E%84%E4%BD%93-%E5%85%B1%E5%90%8C%E4%BD%93-%E4%BD%8D%E5%9F%9F%E5%8F%8Atypedef/"/>
    <id>https://www.rainbowtrash.top/2018/01/15/结构体-共同体-位域及typedef/</id>
    <published>2018-01-15T02:59:05.000Z</published>
    <updated>2018-01-15T03:03:37.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2><strong>一.结构体</strong>(struct)</h2><p></p><h3><strong>1.定义</strong></h3><br><ul><br>    <li><strong>结构</strong>是 C 编程中另一种用户<strong>自定义</strong>的可用的数据类型，它允许您存储不同类型的数据项。</li><br></ul><br><br><h3><strong>2.使用</strong></h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*一般使用*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">std</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入名字:"</span>); </span><br><span class="line">gets(<span class="built_in">std</span>.name);<span class="comment">//接受输入的字符串 </span></span><br><span class="line"><span class="built_in">strcpy</span>(<span class="built_in">std</span>.ID,<span class="string">"20171120111"</span>);<span class="comment">//复制字符串</span></span><br><span class="line"><span class="built_in">std</span>.score=<span class="number">95.5</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %2.1f"</span>,<span class="built_in">std</span>.name,<span class="built_in">std</span>.ID,<span class="built_in">std</span>.score);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*作为函数参数使用*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">float</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以指针形式传入参数 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scanf_struct</span><span class="params">(struct student *<span class="built_in">std</span>)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入名字:"</span>); </span><br><span class="line">gets(<span class="built_in">std</span>-&gt;name);<span class="comment">//接受输入的字符串 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入ID:"</span>);</span><br><span class="line">gets(<span class="built_in">std</span>-&gt;ID);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入分数:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;<span class="built_in">std</span>-&gt;score); <span class="comment">//接受输入浮点数 </span></span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">std</span>;</span></span><br><span class="line"></span><br><span class="line">scanf_struct(&amp;<span class="built_in">std</span>);<span class="comment">//调用函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %2.1f"</span>,<span class="built_in">std</span>.name,<span class="built_in">std</span>.ID,<span class="built_in">std</span>.score); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*作为结构数组使用*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">std</span>[2];</span><span class="comment">//初始化数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i) &#123;</span><br><span class="line">scanf_struct(&amp;<span class="built_in">std</span>[i]);</span><br><span class="line">getchar();<span class="comment">//接收回车,调用函数scanf()不接手回车,回车会被下次循环的首个gets()接收 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s %s %2.1f\n"</span>,<span class="built_in">std</span>[i].name,<span class="built_in">std</span>[i].ID,<span class="built_in">std</span>[i].score); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h2><strong>二.共同体</strong>(union)</h2><br><strong><h3>1.定义</h3></strong><p></p><ul><br>    <li>允许在<strong>相同</strong>的内存位置存储<strong>不同的数据类型</strong>。</li><br>    <li>可以定义一个带有多成员的共用体，但是任何时候只能有<strong>一个</strong>成员带有值</li><br>    <li>共用体提供了一种使用相同的内存位置的有效方式,大大节约内存</li><br><br></ul><p></p><h3><strong>2.内存使用情况</strong></h3><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  <span class="built_in">string</span>[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data; </span><br><span class="line">       </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"内存占用 : %d\n"</span>, <span class="keyword">sizeof</span>(data));</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p><pre>内存占用 : 20</pre><br>    需要最多内存的成员为”string”,则共同体申请20字节内存</p><p></p><h3><strong>3.各成员的访问</strong></h3><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">union</span> Data</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">int</span> i;</span><br><span class="line">   <span class="keyword">float</span> f;</span><br><span class="line">   <span class="keyword">char</span>  str[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data;        </span><br><span class="line"> </span><br><span class="line">   data.i = <span class="number">10</span>;</span><br><span class="line">   data.f = <span class="number">220.5</span>;</span><br><span class="line">   <span class="built_in">strcpy</span>( data.str, <span class="string">"C Programming"</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.i : %d\n"</span>, data.i);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.f : %f\n"</span>, data.f);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.str : %s\n"</span>, data.str);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>结果为:</p><p><pre>data.i : 1917853763<br>data.f : 4122360580327794900000000000000.000000<br>data.str : C Programming</pre><br>由于共用同一内存空间,后赋值的变量会覆盖之前的值,<strong>i j</strong> 值受损<br>所以在同一时间只能使用一个变量<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">union</span> Data data;        </span><br><span class="line"> </span><br><span class="line">   data.i = <span class="number">10</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.i : %d\n"</span>, data.i);</span><br><span class="line">   </span><br><span class="line">   data.f = <span class="number">220.5</span>;</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.f : %f\n"</span>, data.f);</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">strcpy</span>( data.str, <span class="string">"C Programming"</span>);</span><br><span class="line">   <span class="built_in">printf</span>( <span class="string">"data.str : %s\n"</span>, data.str);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;一.结构体&lt;/strong&gt;(struct)&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;1.定义&lt;/strong&gt;&lt;/h3&gt;&lt;br&gt;&lt;ul&gt;&lt;br&gt;    &lt;li&gt;&lt;strong&gt;结构&lt;/strong&gt;是 C 编程中另一种用户&lt;stro
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>变量</title>
    <link href="https://www.rainbowtrash.top/2018/01/15/%E5%8F%98%E9%87%8F/"/>
    <id>https://www.rainbowtrash.top/2018/01/15/变量/</id>
    <published>2018-01-15T02:51:09.000Z</published>
    <updated>2018-01-15T02:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3><strong>一、自动变量</strong></h3><ul><br>    <li>自动变量是存储在堆栈中的</li><br>    <li><font color="#8C47D0">auto</font>修饰的<strong>局部变量</strong>都是自动变量</li><br>    <li>局部变量在默认情况下都是自动变量</li><br>    <li>在函数中，被声明时创建，函数结束时销毁，多次调用函数时，每次都重新创建</li><br></ul><pre>int num1;auto int num2;</pre><p></p><h3><strong>二、静态变量</strong></h3><p></p><ul><br>    <li>所有的全局变量都是静态变量</li><br>    <li>存储在静态内存中的，也就是不属于堆栈</li><br>    <li>被关键字<strong><font color="#8C47D0">static</font></strong>修饰的局部变量也是静态变量</li><br>    <li>生命周期：静态变量在程序运行之前创建，在程序的整个运行期间始终存在，直到程序结束</li><br><br></ul><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">function_1</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> a=<span class="number">10</span>;<span class="comment">//初始化后就一直存在内存中，不会再次初始化</span></span><br><span class="line">++a;</span><br><span class="line"><span class="keyword">return</span> a+num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i，a;<span class="comment">//任可以初始化a；不同于全局变量</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,function_1(<span class="number">10</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3><strong>三、寄存器变量</strong></h3><p></p><ul><br>    <li>存储在硬件寄存器中的变量,比存储在内存中的变量访问效率更高</li><br>    <li><strong><font color="#8C47D0">register</font></strong>修饰的自动变量都是寄存器变量</li><br>    <li>唯有自动变量才能是寄存器变量</li><br>    <li>由于计算机中寄存器容量有限，不能使用太多的寄存器变量。寄存器使用饱和时，程序将寄存器变量自动转换为自动变量处理</li><br>        <li>为了提高运算速度，一般会将一些频繁使用的自动变量定义为寄存器变量</li><br><br></ul><pre>register int num;</pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;strong&gt;一、自动变量&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;&lt;br&gt;    &lt;li&gt;自动变量是存储在堆栈中的&lt;/li&gt;&lt;br&gt;    &lt;li&gt;&lt;font color=&quot;#8C47D0&quot;&gt;auto&lt;/font&gt;修饰的&lt;strong&gt;局部变量&lt;/strong&gt;都是自动
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Fighting Plane</title>
    <link href="https://www.rainbowtrash.top/2018/01/08/fighting-plane/"/>
    <id>https://www.rainbowtrash.top/2018/01/08/fighting-plane/</id>
    <published>2018-01-08T06:11:54.000Z</published>
    <updated>2018-01-15T12:46:08.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//全局变量</span></span><br><span class="line"><span class="keyword">int</span> air_x, air_y;</span><br><span class="line"><span class="keyword">int</span> bullet_x, bullet_y;</span><br><span class="line"><span class="keyword">int</span> high, width;</span><br><span class="line"><span class="keyword">int</span> enemy_x, enemy_y;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line"><span class="keyword">int</span> game_over;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用于隐藏光标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CONSOLE_CURSOR_INFO cursor_info = &#123; <span class="number">1</span>, <span class="number">0</span> &#125;;  <span class="comment">// 第二个值为0表示隐藏光标</span></span><br><span class="line">SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;cursor_info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">starup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">high = <span class="number">20</span>;</span><br><span class="line">width = <span class="number">30</span>;</span><br><span class="line">air_x = high / <span class="number">2</span>;</span><br><span class="line">air_y = width / <span class="number">2</span>;</span><br><span class="line">bullet_x = bullet_y = <span class="number">0</span>;</span><br><span class="line">enemy_x = high + <span class="number">1</span>;</span><br><span class="line">score = <span class="number">0</span>;</span><br><span class="line">game_over = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示画面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="comment">//打印画面</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; width; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> ((i == air_x) &amp;&amp; (j == air_y))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((i == enemy_x) &amp;&amp; (j == enemy_y))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"#"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((i == bullet_x) &amp;&amp; (j == bullet_y))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="comment">//边框</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (i == high - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"_"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (j == width - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" |"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"击中了:%d架敌机."</span>, score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//敌机速度控制</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">speed</span><span class="params">(<span class="keyword">int</span> speed_num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line">n++;</span><br><span class="line"><span class="keyword">if</span> (n == speed_num) &#123;</span><br><span class="line">n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家不控制的更新</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_without_input</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//子弹上移</span></span><br><span class="line"><span class="keyword">if</span> (bullet_x &gt; <span class="number">-1</span>)</span><br><span class="line">--bullet_x;</span><br><span class="line"></span><br><span class="line"><span class="comment">//敌机判定</span></span><br><span class="line"><span class="keyword">if</span> (enemy_x &lt; high) &#123;</span><br><span class="line"><span class="keyword">if</span> (speed(<span class="number">8</span>))</span><br><span class="line">++enemy_x;</span><br><span class="line"><span class="keyword">if</span> ((enemy_x == bullet_x) &amp;&amp; (enemy_y == bullet_y)) &#123;</span><br><span class="line">enemy_x = high + <span class="number">1</span>;</span><br><span class="line">bullet_x = <span class="number">-1</span>;</span><br><span class="line">score++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line">enemy_x = <span class="number">0</span>;</span><br><span class="line">enemy_y = <span class="number">1</span> + rand() % (high - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//飞机越界</span></span><br><span class="line"><span class="keyword">if</span> (air_x &gt; high<span class="number">-2</span>)</span><br><span class="line">air_x = high<span class="number">-2</span>;</span><br><span class="line"><span class="keyword">if</span> (air_y &gt; width<span class="number">-2</span>)</span><br><span class="line">air_y = width<span class="number">-2</span>;</span><br><span class="line"><span class="keyword">if</span> (air_x &lt; <span class="number">0</span>)</span><br><span class="line">air_x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (air_y &lt; <span class="number">0</span>)</span><br><span class="line">air_y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏是否结束</span></span><br><span class="line"><span class="keyword">if</span> ((enemy_x == air_x) &amp;&amp; (enemy_y == air_y))</span><br><span class="line">game_over = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//玩家控制的更新</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_with_input</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> input;</span><br><span class="line"><span class="comment">//控制</span></span><br><span class="line"><span class="keyword">if</span> (_kbhit())</span><br><span class="line">&#123;</span><br><span class="line">input = _getch();</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'w'</span>)</span><br><span class="line">air_x--;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'s'</span>)</span><br><span class="line">air_x++;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'a'</span>)</span><br><span class="line">air_y--;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'d'</span>)</span><br><span class="line">air_y++;</span><br><span class="line"><span class="keyword">if</span> (input == <span class="string">'f'</span>)</span><br><span class="line">&#123;</span><br><span class="line">bullet_x = air_x - <span class="number">1</span>;</span><br><span class="line">bullet_y = air_y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">starup();</span><br><span class="line">HideCursor(); <span class="comment">// 隐藏光标</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (game_over == <span class="number">0</span>) &#123;</span><br><span class="line">update_with_input();</span><br><span class="line">update_without_input();</span><br><span class="line">show();</span><br><span class="line">Sleep(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"游戏结束\n一共击中了%d架敌机\n"</span>,score);</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span
      
    
    </summary>
    
    
      <category term="game" scheme="https://www.rainbowtrash.top/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>第一次剪的视频</title>
    <link href="https://www.rainbowtrash.top/2017/12/31/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%89%AA%E7%9A%84%E8%A7%86%E9%A2%91/"/>
    <id>https://www.rainbowtrash.top/2017/12/31/第一次剪的视频/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2018-01-01T04:34:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2>自己压制字幕家剪辑的垃圾视频</h2><video poster="https://image.rainbowtrash.top/file/17_12_31/17_12_31_1.jpg" controls loop preload="metadata" height="410"><br>    <source src="https://image.rainbowtrash.top/file/17_12_31/mlp_1.webm" type="video/webm"><br>    <source src="https://image.rainbowtrash.top/file/17_12_31/mlp.mp4" type="video/mp4"><br>    您的浏览器不支持 video 标签。<br></video><p><br><pre>视频源在海外, 挂梯子食用更佳<br>试过腾讯云cdn, 然后国内外都慢了</pre><br></p><p><br><ul><br>     <li>字幕压制工具为<a href="http://www.arctime.org/" target="_blank" rel="noopener">arctime（http://www.arctime.org/）</a>小巧易用满足业余使用。</li><br>     <li>视频剪辑工具为<a href="https://www.shotcut.org/" target="_blank" rel="noopener">shotcut（https://www.shotcut.org/）</a>一样小巧易用。</li><br>     <li>视频编码转换工具<a href="https://videoconverter.wondershare.com/free-video-converter.html" target="_blank" rel="noopener">Wondershare Video Converter Free</a>  小巧易用+1s。</li><br></ul><br></p><p><br><strong>HTML5标准只支持以下格式</strong><br><ul><br>     <li style="list-style-type: none;"><br><ul class="singleol"><br>     <li>MP4 = MPEG 4文件使用 H264 视频编解码器和AAC音频编解码器</li><br>     <li>WebM = WebM 文件使用 VP8 视频编解码器和 Vorbis 音频编解码器</li><br>     <li>Ogg = Ogg 文件使用 Theora 视频编解码器和 Vorbis音频编解码器</li><br></ul><br></li></ul></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;自己压制字幕家剪辑的垃圾视频&lt;/h2&gt;

&lt;video poster=&quot;https://image.rainbowtrash.top/file/17_12_31/17_12_31_1.jpg&quot; controls loop preload=&quot;metadata&quot; height
      
    
    </summary>
    
    
      <category term="MLP" scheme="https://www.rainbowtrash.top/tags/MLP/"/>
    
  </entry>
  
  <entry>
    <title>日期与(某年)天数的相互转换</title>
    <link href="https://www.rainbowtrash.top/2017/12/28/%E6%97%A5%E6%9C%9F%E4%B8%8E-%E6%9F%90%E5%B9%B4-%E5%A4%A9%E6%95%B0%E7%9A%84%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"/>
    <id>https://www.rainbowtrash.top/2017/12/28/日期与-某年-天数的相互转换/</id>
    <published>2017-12-28T14:19:09.000Z</published>
    <updated>2017-12-31T13:53:50.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>日期与(某年)天数的相互转换</h2><p></p><p></p><h3>源代码</h3><p></p><p><pre><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">switch_1</span><span class="params">(<span class="keyword">int</span> <span class="built_in">list</span>[],<span class="keyword">int</span> mon,<span class="keyword">int</span> day)</span><span class="comment">//函数首部行 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(mon;mon&gt;<span class="number">0</span>;--mon)</span><br><span class="line">        day+=<span class="built_in">list</span>[mon<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">switch_2</span><span class="params">(<span class="keyword">int</span> <span class="built_in">list</span>[],<span class="keyword">int</span> day)</span><span class="comment">//函数首部行 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i,mon;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">13</span>;++i)&#123;</span><br><span class="line">        day-=<span class="built_in">list</span>[i];</span><br><span class="line">        <span class="keyword">if</span>(day&lt;=<span class="built_in">list</span>[i+<span class="number">1</span>])&#123;</span><br><span class="line">            mon=i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d月%d日"</span>,mon,day);   </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choice;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"which cases do you want?\n1.日期转换成天数\n2.指定年份的天数求日期\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choice);</span><br><span class="line">    <span class="keyword">int</span> year,day,mon;<span class="comment">//初始化年月日</span></span><br><span class="line">    <span class="comment">//输入年份 </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"inter a year\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;year);</span><br><span class="line">        <span class="keyword">if</span>(year&gt;<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断闰年 </span></span><br><span class="line">    <span class="keyword">int</span> a; </span><br><span class="line">    <span class="keyword">if</span>((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>)</span><br><span class="line">        a=<span class="number">29</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        a=<span class="number">28</span>;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">list</span>[] = &#123;<span class="number">0</span>,<span class="number">31</span>,a,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="comment">//输入月份</span></span><br><span class="line">    <span class="keyword">if</span>(choice==<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"inter a month\n"</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;mon);</span><br><span class="line">                <span class="keyword">if</span>(mon&gt;<span class="number">0</span>&amp;&amp;mon&lt;=<span class="number">12</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//输入天数 </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"inter a day\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;day);</span><br><span class="line">    <span class="keyword">if</span>(day&gt;<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span>(choice==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> D = switch_1(<span class="built_in">list</span>,mon,day);<span class="comment">//函数调用</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d年第%d天\n"</span>,year,D);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        switch_2(<span class="built_in">list</span>,day);<span class="comment">//函数调用 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></pre></p><p></p><p></p><h3>效果演示</h3><p></p><p><br> <img src="https://image.rainbowtrash.top/file/17_12_28/17_12_28_1.png" width="400"><br></p><br><img src="https://image.rainbowtrash.top/file/17_12_28/17_12_28_2.png" width="400"><br><p><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;日期与(某年)天数的相互转换&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;源代码&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="C实验" scheme="https://www.rainbowtrash.top/tags/C%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>打印菱形</title>
    <link href="https://www.rainbowtrash.top/2017/12/27/%E5%AE%9E%E9%AA%8C-%E6%89%93%E5%8D%B0%E8%8F%B1%E5%BD%A2/"/>
    <id>https://www.rainbowtrash.top/2017/12/27/实验-打印菱形/</id>
    <published>2017-12-27T06:04:11.000Z</published>
    <updated>2017-12-31T13:52:07.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>打印菱形</h2><p></p><p></p><h3>源代码</h3><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/***用户输入数字n,程序打印一个有n行行的菱形***/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> <span class="keyword">int</span> n,i,j; </span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"请输入数字:"</span>); </span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); </span><br><span class="line"> </span><br><span class="line"> n=n/<span class="number">2</span>+<span class="number">1</span>;<span class="comment">//为了好算 </span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">//第一个正三角</span></span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++) <span class="comment">//行数循环 </span></span><br><span class="line"> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=n-i; j++)&#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" "</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(j=n-i+<span class="number">1</span>; j&lt;n+i; j++) &#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>); </span><br><span class="line">   &#125; </span><br><span class="line">    </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//第二个倒三角 </span></span><br><span class="line"> <span class="keyword">for</span>(i=n<span class="number">-1</span>; i&gt;=<span class="number">1</span>; i--) <span class="comment">//行数循环 </span></span><br><span class="line"> &#123; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=(n-i); j++) &#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" "</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(j=n-i+<span class="number">1</span>; j&lt;n+i; j++)&#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"*"</span>); </span><br><span class="line">    &#125; </span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);  </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p></p><h3>效果如下</h3><p></p><p><img src="https://image.rainbowtrash.cn/file/17_12_27/17_12_27_1.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;打印菱形&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h3&gt;源代码&lt;/h3&gt;&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;b
      
    
    </summary>
    
    
      <category term="C实验" scheme="https://www.rainbowtrash.top/tags/C%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>总结数据类型及运算</title>
    <link href="https://www.rainbowtrash.top/2017/12/24/%E6%80%BB%E7%BB%93%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E8%BF%90%E7%AE%97/"/>
    <id>https://www.rainbowtrash.top/2017/12/24/总结数据类型及运算/</id>
    <published>2017-12-24T14:00:38.000Z</published>
    <updated>2017-12-27T06:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2>一、数据类型</h2><br><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_1.png" width="630" height="91"><br><br><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_2.png" width="630" height="143"><br><br><h2>二、自动类型转换</h2><br>字节小的可以向字节大的自动转换，但字节大的不能向字节小的自动转换<br><br><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_3.png" width="300" height="101"><br><br>例：<br><br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a;</span><br><span class="line"><span class="keyword">int</span> b = a;</span><br></pre></td></tr></table></figure><br><br><h4><span style="color: #ff0000;"><strong>注</strong></span>：字节小的可以向字节大的自动转换，但字节大的不能向字节小的自动转换</h4><br><h2>三、强制转换</h2><br>三个特点：临时的，被砍的，加括号的<br><ol><br><li><strong>数据类型和表达式都必须加括号</strong>，如把(int)(x/2+y)写成(int)x/2+y则成了把x转换成int型之后再除2再与y相加了。</li><br><br><li>转换后不会改变原数据的类型及变量值，只在本次运算中<strong>临时性转换</strong>。</li><br><br><li>强制转换后的运算结果<strong>不遵循四舍五入原则</strong>。<br>例</li><br></ol><br><br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,(<span class="keyword">int</span>)a);[/cc]</span><br></pre></td></tr></table></figure><br><br><h2>四、运算符</h2><p><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_4.png" width="446" height="140"></p><p><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_5.png" width="446" height="94"></p><p><strong>复合赋值运算符</strong>就是在简单赋值符“=”之前加上其它运算符构成，例如+=、-=、*=、/=、%=。</p><p><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_6.png" width="446" height="94"></p><p><img src="https://image.rainbowtrash.cn/file/17_12_24/17_12_24_7.png" width="446" height="94"></p><p><strong>三目运算符</strong>：“?:”       其格式为：</p><p><strong> </strong>表达式1 ? 表达式2 : 表达式3;</p><p>执行过程是：</p><p>先判断表达式1的值是否为真，如果是真的话执行表达式2；如果是假的话执行表达式3。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;一、数据类型&lt;/h2&gt;&lt;br&gt;&lt;img src=&quot;https://image.rainbowtrash.cn/file/17_12_24/17_12_24_1.png&quot; width=&quot;630&quot; height=&quot;91&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://i
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>结构控制</title>
    <link href="https://www.rainbowtrash.top/2017/12/23/%E7%BB%93%E6%9E%84%E6%8E%A7%E5%88%B6/"/>
    <id>https://www.rainbowtrash.top/2017/12/23/结构控制/</id>
    <published>2017-12-23T14:43:00.000Z</published>
    <updated>2017-12-26T16:42:22.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h2>一、分支结构（if_else）</h2><p></p><h3>1、多重if_else</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">if</span>(a&amp;lt;=<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"it is a negative number"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a&amp;lt;<span class="number">10</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(it is smaller than ten<span class="string">");</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    printf("</span>it is bigger than ten<span class="string">");</span></span><br></pre></td></tr></table></figure><p></p><h3>2、镶嵌if_else</h3><p></p><p><pre><br>if(a&gt;0){<br>    if(a&lt;10){<br>        printf(“it is a positive number which is smaller than ten”)<br>    }<br>}<br></pre></p><p></p><h2>二、循环</h2><br>1、while()<br><a href="https://image.rainbowtrash.cn/file/C_for.png" style="color: #89229b;" target="_blank" rel="noopener"><img src="https://image.rainbowtrash.cn/file/C_for.png" width="269" height="240"></a><br>&nbsp;<p></p><p><pre><br>int a = 0;<br>while(a&lt;=100){<br>    ++a;<br>}<br>printf(“%d”,a);<br></pre></p><p></p><h3>2、do_while</h3><br><a href="https://image.rainbowtrash.cn/file/C_do_while.png" style="color: #89229b;" target="_blank" rel="noopener"><img src="https://image.rainbowtrash.cn/file/C_do_while.png" width="205" height="189"></a><p></p><p><pre><br>int a = 0;<br>do{<br>    ++a;<br>}while(a&lt;0);//注意分号<br>printf(“%d,a”);<br></pre></p><p></p><h3>3、for循环</h3><p></p><p><pre><br>    for(表达式1；表达式2；表达式3)<br></pre><br><a href="https://image.rainbowtrash.cn/file/C_for.png" target="_blank" rel="noopener"><img src="https://image.rainbowtrash.cn/file/C_for.png" width="429" height="203"></a></p><p><pre><br>int a;<br>for(a=1;++a;a&lt;=100){<br>    printf(“%d”,a);<br>}<br>for(a=1;++a,printf(“%d”,a);a&lt;=100);//结尾分号前空白为循环体<br>//两循环等效<br></pre></p><p></p><h3>四、switch循环</h3><br><span>switch语句结构如下<br><a href="https://image.rainbowtrash.cn/file/C_switch.png" target="_blank" rel="noopener"><img src="https://image.rainbowtrash.cn/file/C_switch.png" width="377" height="132"></a><br>其执行顺序如下图：<br><a href="#"><img src="https://image.rainbowtrash.cn/file/C_switch2.png" width="479" height="275"></a><br>3、switch后面的表达式语句只能是<strong>整型或者字符类型</strong>。<br>4、在case后，<strong>允许有多个语句</strong>，可以不用{}括起来。<br>5、各case和default子句的先后顺序可以变动，而不会影响程序执行结果。<br>6、default子句可以省略不用。<br>例：<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">int</span> score = <span class="number">87</span>; <span class="comment">//考试分数为87分 </span></span><br><span class="line">     score/=<span class="number">10</span>; </span><br><span class="line">     <span class="keyword">switch</span>(score)     <span class="comment">//switch(score/=10)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等级A"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等级B"</span>);</span><br><span class="line">            <span class="keyword">break</span>;                        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>: </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等级C"</span>);</span><br><span class="line">            <span class="keyword">break</span>;               </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"等级D"</span>);</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p></p><h3>五、goto(尽量不用）</h3><br><a href="https://image.rainbowtrash.cn/file/C_goto.png" target="_blank" rel="noopener"><img src="https://image.rainbowtrash.cn/file/C_goto.png" width="303" height="275"></a><p></p></span>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;h2&gt;一、分支结构（if_else）&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3&gt;1、多重if_else&lt;/h3&gt;

&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="C语言" scheme="https://www.rainbowtrash.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
